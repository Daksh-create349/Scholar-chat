rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profiles. Only the user can read and write their own profile.
     * @path /users/{userId}
     * @allow (create) - User with ID 'user123' can create their profile. (auth.uid == 'user123')
     * @allow (get, list, update, delete) - User with ID 'user123' can get, list, update, and delete their profile. (auth.uid == 'user123')
     * @deny (create) - User with ID 'user456' cannot create a profile for 'user123'.
     * @deny (get, list, update, delete) - User with ID 'user456' cannot get, list, update or delete the profile of 'user123'.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource.data != null;
      }

      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Controls access to research papers. Research papers are publicly readable, but creation, updates, and deletion are not allowed in this prototype.
     * @path /research_papers/{researchPaperId}
     * @allow (get, list) - Any user can read and list research papers.
     * @deny (create, update, delete) - No user can create, update, or delete research papers.
     * @principle Allows public read access but restricts write access.
     */
    match /research_papers/{researchPaperId} {
      allow get: if true;
      allow list: if true;
    }

    /**
     * @description Controls access to author data. Author data is publicly readable, but creation, updates, and deletion are not allowed in this prototype.
     * @path /authors/{authorId}
     * @allow (get, list) - Any user can read and list author data.
     * @deny (create, update, delete) - No user can create, update, or delete author data.
     * @principle Allows public read access but restricts write access.
     */
    match /authors/{authorId} {
      allow get: if true;
      allow list: if true;
    }

    /**
     * @description Controls access to collections of research papers. Only the user who owns the collection can read and write it.
     * @path /users/{userId}/collections/{collectionId}
     * @allow (create) - User 'user123' can create a collection under their user ID. (auth.uid == 'user123')
     * @allow (get, list, update, delete) - User 'user123' can read, list, update, and delete their own collections. (auth.uid == 'user123')
     * @deny (create) - User 'user456' cannot create a collection under user 'user123''s ID.
     * @deny (get, list, update, delete) - User 'user456' cannot read, list, update, or delete user 'user123''s collections.
     * @principle Enforces ownership for collections.
     */
    match /users/{userId}/collections/{collectionId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource.data != null;
      }

      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Controls access to annotations on research papers. Only the user who created the annotation can read, write, update, and delete it.
     * @path /research_papers/{researchPaperId}/annotations/{annotationId}
     * @allow (create) - User 'user123' can create an annotation with their userId. (request.resource.data.userId == 'user123')
     * @allow (get, list) - Any user can read/list annotations
     * @allow (update, delete) - User 'user123' can update/delete their own annotation. (resource.data.userId == 'user123')
     * @deny (create) - User 'user456' cannot create an annotation for user 'user123'.
     * @deny (update, delete) - User 'user456' cannot update/delete an annotation created by user 'user123'.
     * @principle Enforces ownership for annotations.
     */
    match /research_papers/{researchPaperId}/annotations/{annotationId} {
      allow get: if true;
      allow list: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}